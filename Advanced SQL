--Advance SQL

-- 1) adjusting max packet size to allow large files to run

SET GLOBAL max_allowed_packet = 1073741824;


-- 2) adjusting your SQL mode to allow invalid dates and use a smarter GROUP BY setting

SET GLOBAL SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES,ONLY_FULL_GROUP_BY';


-- 3) adjusting your timeout settings to run longer queries

SET GLOBAL connect_timeout=28800;

SET GLOBAL wait_timeout=28800;

SET GLOBAL interactive_timeout=28800;

-- The database doesn't load here because it's too massive for github

-- Task 1: Prodcue a breakdown by UTM Source, campaign, and referring domain


-For the Schema in the example

Use mavenfuzzyfactory;

Select 
  utm_source,
  utm_campaign,
  http_referer
  
COUNT(DISTINCT website_session_id) AS number_of_sessions
FROM website_sessions
WHERE created_at < '2012-04-14

GROUP BY
  utm_source,
  utm_campaign
  http_referer
  
ORDER BY number_of_sessions DESC;

--Task 2: Calculate the Conversion Rate from session to order
-- CVR must be at least 4%

Select 

COUNT(DISTINCT. website_sessions.website_session_id) AS sessions, 
COUNT(DISTINCT. orders.order_id) AS orders,
COUNT(DISTINCT. orders.order_id)/ COUNT(DISTINCT. website_sessions.website_session_id) AS sessions_to_order_conv_rt

From website_sessions
  LEFT JOIN orders
    ON orders.wes_session_id = website_sessions.website_session_id

Where website_sessions.creatred_at < '2012-04-14
  AND utm_source = 'gsearch'
  AND utm_campaign = 'nonbrand';
  
  
  --Task 3: We bid down gsearch nonbrand. Pull gsearch nonbrand trended session vlume, by week
  
  Select
  
  MIN(DATE(created_at)) AS week_start_at, 
  COUNT(DISTINCT website_session_id) AS sessions
  
  From website_sessions 
  
   WHERE created_at < '2012-04-15'
    AND utm_source = 'gsearch'
    AND utm_campaign = 'nonbrand'
    
   GROUP BY   
   YEAR(created_at)
   WEEK(created_at);
   
   -- Task 4: pull conversion rates from session to order, by devide type
   
   Select
      website_sessions.device_type,
      COUNT(DISTINCT website_sessions.website_session_id) AS sessions,
      COUNT(DISTINCT orders.order_id) AS orders,
      COUNT(DISTINCT orders.order_id)/ COUNT(DISTINCT website_sessions.website_session_id) AS conv_rt
      
     From website_sessions 
      LEFT JOIN orders
        ON orders.website_session_id = website_sessions.website_session_id
  
   WHERE website_sessions.created_at < '2012-05-12'
    AND utm_source = 'gsearch'
    AND utm_campaign = 'nonbrand'
  
  GROUP BY 1;
  
  -- Task 5: Pull Weekly trends for both desktop and mobile
  
  Select 
  
  YEAR(created_at) AS yr,
  WEEK(created_at) AS wk,
  MIN(DATE(created_at)) AS week_start_date,
  COUNT(DISTINCT CASE WHEN device_type = 'desktop' THEN website_session_id ELSE NULL END) AS desktop_sessions,
  COUNT(DISTINCT CASE WHEN device_type = 'mobile' THEN website_session_id ELSE NULL END) AS mobile_sessions
  
  FROM website_sessions
    
  WHERE website_sessions.created_at < '2012-06-09'
      AND website_sessions.created_at > '2012-04-15'
      AND utm_source = 'gsearch'
      AND utm_campaign = 'nonbrand'
 
 GROUP BY
    YEAR(created_at),
    WEEK(created_at)
